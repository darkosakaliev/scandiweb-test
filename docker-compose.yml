services:
  php:
    build: ./php
    container_name: php-container
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html:rw
    depends_on:
      - mysql
    networks:
      - scandiweb-network

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html:rw
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - scandiweb-network

  mysql:
    image: mysql:latest
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_DATABASE=scandiweb_db
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./mysql_data:/var/lib/mysql:rw
      - ./ecommerce-data.sql:/docker-entrypoint-initdb.d/ecommerce-data.sql:ro
    networks:
      - scandiweb-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-container
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql-container
      MYSQL_ROOT_PASSWORD: ""
    depends_on:
      - mysql
    networks:
      - scandiweb-network

  nodejs:
    image: node:latest
    container_name: nodejs-container
    ports:
      - "5173:5173"
    working_dir: /app
    volumes:
      - ./frontend:/app:rw
    networks:
      - scandiweb-network
    tty: true
    command: bash -c "npm install && npm run dev"

networks:
  scandiweb-network:
    driver: bridge
